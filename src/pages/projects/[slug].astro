---
import Layout from "../../layouts/Layout.astro";
import "../../style/nav_footer.css";
import "../../style/index_style.css";
import "../../style/projects_page.css";
import "../../style/slug.css"

// Import databasetables

const path = Astro.url.pathname;
const parts = path.split("/");
const segments = parts[2].split("-");

const id = Number(segments[segments.length - 1]);
const itemType = segments[segments.length - 2];

var title = "";
var properties;

// Select right Item
switch (itemType){
	case "plants":
		[properties] = [{name: "Name1", genus: "Genus1", notes:"Note1", picturePath:""}];
		break;
	case "projects":
		[properties] = [{name: "Name1", type: "Type1", notes:"Note1", picturePath:""}];
		break;
	case "animals":
		[properties] = [{name: "Name1", genus: "Genus1", notes:"Note1", picturePath:""}];
		break;
	case "equipment":
		[properties] = [{name: "Name1", type: "Type1", notes:"Note1", picturePath:""}];
		break;
	default:
		throw new Error("Invalid item type: " + itemType);
}

title = properties.name;
---

<Layout title={title}>
	<main>
		<div class="popup">	
			<h1 class="project-title">{title}</h1>
			<div class="container_all">
				<div class="pic_property_container">
					<div class="property_container">
						{Object.entries(properties).filter(([key]) => key !== "notes" && key !== "picturePath").map(([key, value]) => {
							return(
								
								<div class="property">
									<div class="property_key">{key}</div>
									<div class="property_value">{value instanceof Date? value.toDateString():value}</div>
								</div>
								)
							}
						)}
					</div>
					<div class="pic_container">
						<img src={properties.picturePath == "N/A"? "/src/images/plants/Monstera Deliciosa.png":properties.picturePath}>
						<div class="placeholder"></div>
					</div>
				</div>
				<div class="property_notes">
					<div class="property_notes_key">Notes:</div>
					<div class="property_notes_value">{properties.notes}</div>
				</div>
			</div>
		</div>
	</main>
</Layout>